sudo: false
language: bash
os:
  - linux

env:
  XTENSA_ESP32_TOOLCHAIN=xtensa-esp32-elf-gcc8_2_0-esp32-2019r1-linux-amd64.tar.gz
  XTENSA_ESP8266_TOOLCHAIN=xtensa-lx106-elf-linux64-1.22.0-92-g8facf4c-5.2.0.tar.gz

addons:
  apt:
    packages:
      - gcc
      - wget
      - make
      - libncurses-dev
      - flex
      - bison
      - python
      - python-pip
      - gperf
      - ccache

before_install:
  # Save path to the git respository
  - PROJECT_PATH=$(pwd)

install:
  # Install ESP32 toochain following steps as desribed
  # in http://esp-idf.readthedocs.io/en/latest/linux-setup.html

  # Prepare directory for the toolchain
  - mkdir -p ~/esp32 ~/esp8266
  # Download binary toolchain for the ESP32
  - cd ~/esp32
  - wget https://dl.espressif.com/dl/$XTENSA_ESP32_TOOLCHAIN
  - tar -xzf $XTENSA_ESP32_TOOLCHAIN
  # Get ESP-IDF from github
  - git clone --recursive https://github.com/espressif/esp-idf.git

  # Download binary toolchain for the ESP8266
  - cd ~/esp8266
  - wget https://dl.espressif.com/dl/$XTENSA_ESP8266_TOOLCHAIN
  - tar -xzf $XTENSA_ESP8266_TOOLCHAIN
  # Get ESP8266_RTOS_SDK from github
  - git clone --recursive https://github.com/espressif/ESP8266_RTOS_SDK.git

  # Setup ccache to build faster
  # XXX when the entire build process exceeds 50 min, th job will be killed
  # https://docs.travis-ci.com/user/customizing-the-build/#build-timeouts
  - ccache --version
  - mkdir ~/ccache_bin
  - (cd ~/ccache_bin && ln -s /usr/bin/ccache xtensa-lx106-elf-gcc)
  - (cd ~/ccache_bin && ln -s /usr/bin/ccache xtensa-esp32-elf-gcc)
  - export CCACHE_BASEDIR=$PROJECT_PATH
  - export CCACHE_CPP2=true

  # Make toolchains available for all terminal sessions
  - export PATH=$HOME/ccache_bin:$PATH:$HOME/esp32/xtensa-esp32-elf/bin:$HOME/esp8266/xtensa-lx106-elf/bin

  # Get Python requirements
  - python -m pip install --user --upgrade pyOpenSSL
  - python -m pip install --user -r ~/esp32/esp-idf/requirements.txt
  - python -m pip install --user -r ~/esp8266/ESP8266_RTOS_SDK/requirements.txt

script:
  - rm -f ~/build.log
  # XXX surpress log output where possible. when the size exceeds 4 MB, the
  # job will be killed.
  - |
    for TARGET in esp32 esp8266; do
      IGNORE_FILE="travis-ignore"
      export IDF_PATH=~/esp32/esp-idf

      case $TARGET in
        esp32)
          ;;
        esp8266)
          IGNORE_FILE="travis-ignore-esp8266"
          export IDF_PATH=~/esp8266/ESP8266_RTOS_SDK
          # these drivers do not compile for ESP8266 yet
          export EXCLUDE_COMPONENTS="encoder max7219 mcp23x17"
          ;;
      esac

      cd $PROJECT_PATH/examples
      for i in $(ls -d */); do
        if [ ! -e $PROJECT_PATH/examples/$i/$IGNORE_FILE ]; then
          cd $PROJECT_PATH/examples/$i
          make defconfig
          # use travis_wait to avoid timeout during the build
          travis_wait make -j2 >> ~/build.log 2>&1
          if [ $? -ne 0 ]; then
            # when failed, show last 100 lines for debugging, and exit with
            # non-zero exit code
            tail -n 100 ~/build.log
            exit 1
          fi
          make clean >/dev/null
          # make sure the directory is clean
          rm -rf sdkconfig build
        fi
      done
    done
